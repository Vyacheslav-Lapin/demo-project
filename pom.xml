<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.2</version>
    <!--<groupId>org.springframework.cloud</groupId>-->
    <!--<artifactId>spring-cloud-starter-parent</artifactId>-->
    <!--<version>2023.0.3</version>-->
  </parent>

  <groupId>pro.vlapin.experiments</groupId>
  <artifactId>demo-project</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <modules>
    <module>demo-project-impl</module>
    <module>demo-project-api</module>
    <module>demo-project-client</module>
    <module>demo-project-stub</module>
  </modules>

  <properties>

    <!--region General-->
    <java.version>22</java.version>
    <revision>0.0.1</revision>
    <minimal.maven.version>3.9.9</minimal.maven.version>
    <spring-boot.version>3.3.2</spring-boot.version>
    <sourceDirectory>src/main/java</sourceDirectory>
    <!--endregion-->

    <!--region Bills of material (BOM)-->
    <spring-cloud.version>2023.0.3</spring-cloud.version>
    <!--endregion-->

    <!--region Libs-->
    <vavr.version>0.10.4</vavr.version>
    <lombok.version>1.18.34</lombok.version>
    <checker.version>3.46.0</checker.version>
    <annotations.version>24.1.0</annotations.version>
    <jcip-annotations.version>1.0</jcip-annotations.version>
    <spotbugs.version>4.8.6</spotbugs.version>
    <error_prone_annotations.version>2.30.0</error_prone_annotations.version>
    <springdoc-openapi.version>2.6.0</springdoc-openapi.version>
    <!--endregion-->

    <!--region Test-libs-->
    <assertj-vavr.version>0.4.3</assertj-vavr.version>
    <!--endregion-->

    <!--region Plugins-->
    <flatten-maven-plugin.version>1.6.0</flatten-maven-plugin.version>
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <maven-surefire-plugin.version>3.4.0</maven-surefire-plugin.version>
    <maven-enforcer-plugin.version>3.5.0</maven-enforcer-plugin.version>
    <versions-maven-plugin.version>2.17.1</versions-maven-plugin.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <sonar-maven-plugin.version>4.0.0.4121</sonar-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.8.6.2</spotbugs-maven-plugin.version>
    <maven-help-plugin.version>3.5.0</maven-help-plugin.version>
    <maven-source-plugin.version>3.3.1</maven-source-plugin.version>
    <lombok-maven-plugin.version>1.18.20.0</lombok-maven-plugin.version>
    <lombok.outputDirectory>target/generated-sources/delomboked</lombok.outputDirectory>
    <yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
    <!--endregion-->

    <!--region map-struct-->
    <mapstruct.version>1.6.0</mapstruct.version>
    <lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
    <mapstruct-spring-annotations.version>1.1.1</mapstruct-spring-annotations.version>
    <!--endregion-->

  </properties>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-rest</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
    </dependency>
    <dependency>
      <groupId>org.thymeleaf.extras</groupId>
      <artifactId>thymeleaf-extras-springsecurity6</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-docker-compose</artifactId>
      <optional>true</optional>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
      <exclusions>
        <exclusion>
          <groupId>org.checkerframework</groupId>
          <artifactId>checker-qual</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.vavr</groupId>
      <artifactId>vavr</artifactId>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-vavr</artifactId>
    </dependency>

    <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne)-->
    <dependency>
      <groupId>org.checkerframework</groupId>
      <artifactId>checker</artifactId>
    </dependency>
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>net.jcip</groupId>
      <artifactId>jcip-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.spotbugs</groupId>
      <artifactId>spotbugs-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.google.errorprone</groupId>
      <artifactId>error_prone_annotations</artifactId>
    </dependency>
    <!--endregion-->

    <!--region map-struct-->
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok-mapstruct-binding</artifactId>
    </dependency>
    <dependency>
      <groupId>org.mapstruct.extensions.spring</groupId>
      <artifactId>mapstruct-spring-annotations</artifactId>
    </dependency>
    <!--endregion-->

    <!--region OpenAPI-->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-common</artifactId>
    </dependency>
    <!--endregion-->

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>io.vavr</groupId>
        <artifactId>vavr</artifactId>
        <version>${vavr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-vavr</artifactId>
        <version>${assertj-vavr.version}</version>
        <scope>test</scope>
      </dependency>

      <!--region Common Annotations (CheckerFramework, JetBrains, SpotBugs, ErrorProne)-->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker</artifactId>
        <version>${checker.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>org.jetbrains</groupId>
        <artifactId>annotations</artifactId>
        <version>${annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>net.jcip</groupId>
        <artifactId>jcip-annotations</artifactId>
        <version>${jcip-annotations.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-annotations</artifactId>
        <version>${spotbugs.version}</version>
        <optional>true</optional>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${error_prone_annotations.version}</version>
        <scope>provided</scope>
      </dependency>
      <!--endregion-->

      <!--region map-struct-->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok-mapstruct-binding</artifactId>
        <version>${lombok-mapstruct-binding.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct.extensions.spring</groupId>
        <artifactId>mapstruct-spring-annotations</artifactId>
        <version>${mapstruct-spring-annotations.version}</version>
      </dependency>
      <!--endregion-->

      <!--region OpenAPI-->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-common</artifactId>
        <version>${springdoc-openapi.version}</version>
      </dependency>
      <!--endregion-->

      <!--region Modules-->
      <dependency>
        <groupId>pro.vlapin.experiments</groupId>
        <artifactId>demo-project-impl</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pro.vlapin.experiments</groupId>
        <artifactId>demo-project-api</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pro.vlapin.experiments</groupId>
        <artifactId>demo-project-client</artifactId>
        <version>${revision}</version>
      </dependency>
      <dependency>
        <groupId>pro.vlapin.experiments</groupId>
        <artifactId>demo-project-stub</artifactId>
        <version>${revision}</version>
      </dependency>
      <!--endregion-->

    </dependencies>
  </dependencyManagement>

  <profiles/>
  <build>
    <!--<defaultGoal>spring-boot:run</defaultGoal>-->
    <!--<defaultGoal>verify spring-boot:run</defaultGoal>-->
    <defaultGoal>verify</defaultGoal>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <compilerArgs>
              <arg>--enable-preview</arg>
              <!--maven.compiler.enablePreview-->
            </compilerArgs>
            <annotationProcessorPaths>
              <path>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
              </path>
              <path>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok-mapstruct-binding</artifactId>
                <version>${lombok-mapstruct-binding.version}</version>
              </path>
              <path>
                <groupId>org.mapstruct.extensions.spring</groupId>
                <artifactId>mapstruct-spring-extensions</artifactId>
                <version>${mapstruct-spring-annotations.version}</version>
              </path>
              <path>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker</artifactId>
                <version>${checker.version}</version>
              </path>
              <path>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-configuration-processor</artifactId>
                <version>${spring-boot.version}</version>
              </path>
            </annotationProcessorPaths>
            <!--<annotationProcessors>-->
            <!--<annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>-->
            <!--<annotationProcessor>org.checkerframework.checker.interning.InterningChecker</annotationProcessor>-->
            <!--<annotationProcessor>org.checkerframework.checker.fenum.FenumChecker</annotationProcessor>-->
            <!--<annotationProcessor>org.checkerframework.checker.formatter.FormatterChecker</annotationProcessor>-->
            <!--<annotationProcessor>org.checkerframework.checker.regex.RegexChecker</annotationProcessor>-->
            <!--</annotationProcessors>-->
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <!--suppress MybatisXMapperXmlInspection -->
          <version>${maven-surefire-plugin.version}</version>
          <configuration>
            <argLine>--enable-preview</argLine>
            <includes>
              <include>**/Test*.java</include>
              <include>**/*Test.java</include>
              <include>**/*Tests.java</include>
              <include>**/*TestCase.java</include>
            </includes>

            <properties>
              <!--<includeTags>fast</includeTags>-->
              <excludeTags>slow</excludeTags>
              <!--<configurationParameters>-->
              <!--junit.jupiter.conditions.deactivate = *-->
              <!--</configurationParameters>-->
            </properties>

          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources:package:jar-no-fork</id>
              <phase>package</phase>
              <goals>
                <goal>jar-no-fork</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <executions>
            <execution>
              <id>delombok-sources:process-sources:run</id>
              <phase>process-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-sources">
                  <property name="maven.classpath" refid="maven.compile.classpath"/>
                  <!--suppress MavenModelInspection-->
                  <mkdir dir="${lombok.outputDirectory}"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                      <pathelement path="${maven.classpath}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                    <arg value="${lombok.sourceDirectory}"/>
                    <arg value="-f"/>
                    <arg value="indent:2"/>
                    <arg value="-f"/>
                    <arg value="finalParams:skip"/>
                    <arg value="-f"/>
                    <arg value="pretty"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection-->
                    <arg value="${lombok.outputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution>
            <execution>
              <id>delombok-test-sources:process-test-sources:run</id>
              <phase>process-test-sources</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="delombok-test-sources">
                  <property name="maven.classpath" refid="maven.test.classpath"/>
                  <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                  <mkdir dir="${lombok.testOutputDirectory}"/>
                  <java classname="lombok.launch.Main" fork="true">
                    <classpath>
                      <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                      <pathelement path="${maven.classpath}"/>
                      <!--suppress MavenModelInspection-->
                      <pathelement path="${lombok.outputDirectory}"/>
                    </classpath>
                    <arg value="delombok"/>
                    <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                    <arg value="${lombok.testSourceDirectory}"/>
                    <arg value="-d"/>
                    <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                    <arg value="${lombok.testOutputDirectory}"/>
                  </java>
                </target>
              </configuration>
            </execution>
            <execution>
              <id>delombok-cleaning:verify:run</id>
              <phase>verify</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target name="cleanup-openapi-dir">
                  <!--suppress MavenModelInspection-->
                  <delete dir="${lombok.outputDirectory}"/>
                  <!--suppress MavenModelInspection, MybatisXMapperXmlInspection-->
                  <delete dir="${lombok.testOutputDirectory}"/>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>${maven-enforcer-plugin.version}</version>
          <executions>
            <execution>
              <id>enforce-maven</id>
              <goals>
                <goal>enforce</goal>
              </goals>
              <configuration>
                <rules>
                  <requireJavaVersion>
                    <version>${java.version}</version>
                  </requireJavaVersion>
                  <requireMavenVersion>
                    <version>${minimal.maven.version}</version>
                  </requireMavenVersion>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>jacoco-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>surefireArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-unit-test</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <execution>
              <id>pre-integration-test</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
              <configuration>
                <propertyName>failsafeArgLine</propertyName>
              </configuration>
            </execution>
            <execution>
              <id>post-integration-test</id>
              <phase>post-integration-test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>flatten-maven-plugin</artifactId>
          <version>${flatten-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>flatten:process-resources:flatten</id>
              <phase>process-resources</phase>
              <goals>
                <goal>flatten</goal>
              </goals>
            </execution>
            <execution>
              <id>flatten.clean:clean:clean</id>
              <phase>clean</phase>
              <goals>
                <goal>clean</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>it.ozimov</groupId>
          <artifactId>yaml-properties-maven-plugin</artifactId>
          <version>${yaml-properties-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>initialize</phase>
              <goals>
                <goal>read-project-properties</goal>
              </goals>
              <configuration>
                <files>
                  <!--suppress MavenModelInspection, UnresolvedMavenProperty-->
                  <file>${maven.multiModuleProjectDirectory}/maven.yml</file>
                  <file>${project.basedir}/maven.yml</file>
                </files>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
            <!--suppress UnresolvedMavenProperty-->
            <rulesUri>file://${maven.multiModuleProjectDirectory}/ruleset.xml</rulesUri>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
            <executable>true</executable>
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <configuration>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <xmlOutput>true</xmlOutput>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${sonar-maven-plugin.version}</version>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>flatten-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>it.ozimov</groupId>
        <artifactId>yaml-properties-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.sonarsource.scanner.maven</groupId>
        <artifactId>sonar-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
